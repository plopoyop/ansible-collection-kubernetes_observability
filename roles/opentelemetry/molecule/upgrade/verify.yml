---
- name: Verify
  hosts: localhost
  connection: local
  gather_facts: true

  tasks:
    - name: "Pause for job to complete."
      ansible.builtin.pause:
        seconds: 60

    - name: "Get 'opentelemetry' namespace info."
      kubernetes.core.k8s_info:
        kind: "Namespace"
        name: "opentelemetry"
      register: namespace_opentelemetry

    - name: Assert that 'opentelemetry' namespace is active
      ansible.builtin.assert:
        that: namespace_opentelemetry['resources'][0]['status']['phase'] == "Active"

    - name: "Get 'opentelemetry operator' deployment info."
      kubernetes.core.k8s_info:
        kind: "Deployment"
        name: "otel-collector-opentelemetry-operator"
        namespace: "opentelemetry"
      register: otel_operator

    - name: "Assert that 'opentelemetry operator' is deployed"
      ansible.builtin.assert:
        that: otel_operator['resources'][0]['status']['availableReplicas'] == 1

    - name: "Get 'opentelemetry daemon collector' deployment info."
      kubernetes.core.k8s_info:
        kind: "DaemonSet"
        name: "otel-collector-daemon-collector"
        namespace: "opentelemetry"
      register: otel_daemon_collector

    - name: "Assert that 'opentelemetry daemon collector' is deployed"
      ansible.builtin.assert:
        that: otel_daemon_collector['resources'][0]['status']['numberAvailable'] == 1

    - name: "Get 'demo-instrumentation' info."
      kubernetes.core.k8s_info:
        api_version: "opentelemetry.io/v1alpha1"
        kind: "Instrumentation"
        name: "demo-instrumentation"
        namespace: "opentelemetry"
      register: demo_instrumentation

    - name: "Assert that 'demo-instrumentation' is created"
      ansible.builtin.assert:
        that: demo_instrumentation['resources'][0] is defined
